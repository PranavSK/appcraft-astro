---
import type { GetStaticPaths } from 'astro'
import type { CollectionKey } from 'astro:content'

import { SaveButton } from '@/components/cms/save-button'
import { Sandbox } from '@/components/markdoc/sandbox'
import { collections } from '@/content/config'
import DashboardLayout from '@/layouts/dashboard.astro'
import { getCollection } from 'astro:content'
import { stringify } from 'yaml'

export const getStaticPaths = (async () => {
  const collectionKeys = Object.keys(collections) as CollectionKey[]
  const paths = await Promise.all(
    collectionKeys.map(async (collectionKey) => {
      const collection = await getCollection(collectionKey)
      return [
        {
          params: {
            collection: collectionKey,
            slug: 'create-new'
          } as const,
          props: {
            item: null
          }
        },
        ...collection.map((item) => {
          return {
            params: {
              collection: collectionKey,
              slug: item.slug
            } as const,
            props: {
              item
            }
          }
        })
      ]
    })
  )
  return paths.flat()
}) satisfies GetStaticPaths

const { collection, slug } = Astro.params
const { item } = Astro.props
const frontmatter = item?.data
  ? `---\n${stringify(item.data, { indent: 2 })}---\n`
  : ''
const body = item?.body ?? ''
const initialContent = `${frontmatter}${body}`
---

<DashboardLayout class='h-dvh'>
  <h2 class='text-xl' slot='header'>{item?.id ?? 'Create New'}</h2>
  <SaveButton
    client:idle
    collection={collection}
    extension='md'
    slot='header'
    slug={slug}
  />
  <Sandbox
    class='size-full'
    client:load
    collection={collection}
    initialContent={initialContent}
    slug={slug}
  />
</DashboardLayout>
